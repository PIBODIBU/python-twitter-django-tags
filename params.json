{"name":"Python-twitter-django-tags","tagline":"Useful python-twitter template tags for use with python-twitter api in your django app","body":"### python-twitter-django-tags\r\n\r\nUseful [python-twitter](https://github.com/bear/python-twitter) template tags for use with [python-twitter](https://github.com/bear/python-twitter) api in your django app. Inspired by [django-twitter-tag](https://github.com/coagulant/django-twitter-tag) app. The same type of template integration was desired with [python-twitter](https://github.com/bear/python-twitter).\r\n\r\nThis code is very compact and easily integrates into your existing projects. As of now, I am not planning to package it as a portable reusable app.\r\n\r\n================\r\nDependencies\r\n================\r\n\r\npython-twitter: https://github.com/bear/python-twitter\r\n\r\ndjango: https://github.com/django/django\r\n\r\n================\r\nInstallation\r\n================\r\n\r\nInstall this into one of your existing django projects simply by copying the 'templatetags' folder into one of your existing apps.\r\n\r\n1. Install [python-twitter](https://github.com/bear/python-twitter) for your django project\r\n2. Copy the templatetags folder to the desired django app inside your project\r\n3. Ensure the appliation that you added the folder to is in your INSTALLED_APPS in your settings.py\r\n\r\n4. Use the tags inside of your template:\r\n\r\n\r\n================\r\nUsage\r\n================\r\n\r\nExample usage, assuming that  `tweets` returns a user timeline (See Setting up your view on how to set this up). \r\n```html\r\n<div class=\"block social-block social-twitter\">\r\n    {% load twitter_tags %}\r\n    <h1>{% trans \"Our Twitter\" %}</h1>\r\n    <ul>\r\n        {% for tweet in tweets %}\r\n        <li>\r\n            <div class=\"tweet-meta\">\r\n                <a href=\"https://www.twitter.com/{{ tweet.user.screen_name }}/status/{{ tweet.id }}\" target=\"_blank\">\r\n                    <img src=\"{{ tweet.user.profile_image_url }}\" width=\"32\" height=\"32\" />\r\n                    <h2>{{ tweet.user.name }}<br /><span>@{{ tweet.user.screen_name }} &middot; {{ tweet.created_at|twitter_date }}</span></h2>\r\n                </a>\r\n            </div>\r\n            <p>{{ tweet|expand_tweet_urls|urlize_tweet_text|safe }}</p>\r\n        </li>\r\n        {% endfor %}\r\n\r\n    </ul>\r\n    <a href=\"#\" class=\"btn btn-round btn-red\">{% trans \"Follow Us\" %}</a>\r\n</div>\r\n```\r\nNOTE: Make sure to use expand_tweet_urls before urlize_tweet_text\r\n\r\n\r\n================\r\nSetting up your View\r\n================\r\n\r\nExample get_tweets() function that can be used in your view to retrieve tweets.\r\n\r\n```python\r\nimport twitter\r\ndef get_tweets():\r\n    \"\"\"\r\n    returns twitter feed with settings as described below, contains all related twitter settings\r\n    \"\"\"\r\n    api = twitter.Api(consumer_key='yourcustomerkey',\r\n                      consumer_secret='customerkeysecret',\r\n                      access_token_key='accesstokenkey',\r\n                      access_token_secret='accesstokensecret')\r\n\r\n    return api.GetUserTimeline(screen_name='twitter_screen_name', exclude_replies=True, include_rts=False)  # includes entities\r\n```\r\n\r\nUsage in your view:\r\n```python\r\nfrom your.utils.lib import get_tweets\r\ncontext['tweets'] = get_tweets()\r\n```\r\n\r\n================\r\nGetting the code\r\n================\r\nThe code is hosted at https://github.com/radlws/python-twitter-django-tags. For python twitter, the code is hosted at https://github.com/bear/python-twitter\r\n\r\n\r\n### Support or Contact\r\n\r\nwww.github.com/radlws\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}